# ------------------------------------------------
# |          Clash Config Make by oiozi           |
# |     TG Channel: https://t.me/REBIRTHOKAY     |
# |       GitHub: https://github.com/oiozi        |
# |          Update Date: 2023.10.06             |
# |                  enjoy                       |
# ------------------------------------------------
#port: 7890                                         # HTTP 代理端口
#socks-port: 7891                                   # Socks 端口
mixed-port: 7890                                    # 混合端口
allow-lan: true                                     # 允许局域网连接
bind-address: "*"                                   # 地址绑定
mode: rule                                          # 规则模式
log-level: info                                     # 日志级别
ipv6: true                                          # IPV6开关
external-controller: 127.0.0.1:9090                 # RESTful Web API监听地址
secret:										        # RESTful API的密钥（可选）

dns:
  enable: true                                      # 不使用系统 DNS
  listen: 0.0.0.0:53                                # dns 监听
  ipv6: true                                        # 当为false时，对AAAA问题的响应将为空
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16                      # 虚假IP地址池CIDR
  fake-ip-filter:                                   # 此列表中的主机名将不会使用虚假IP解析
    - '*.lan'
    - localhost.ptlogin2.qq.com
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - '+.xboxlive.com'
    - 'msftconnecttest.com'
    - 'xbox.*.microsoft.com'
    - '*.battlenet.com.cn'
    - '*.battlenet.com'
    - '*.blzstatic.cn'
    - '*.battle.net'
  default-nameserver:                               # 这些域名服务器用于解析下面的DNS域名服务器主机名。
    - 119.29.29.29
    - 114.114.114.114
  nameserver:                                       # 所有DNS问题都直接发送到域名服务器，不涉及代理支持UDP、TCP、DoT、DoH。您可以指定要连接的端口。
    - https://doh.pub/dns-query
    - https://120.53.53.53/dns-query
#  fallback:                                        # 当存在`fallback`时，DNS服务器将同时发送请求当GEOIP国家不是`CN`时，将使用回退服务器的答案。
#    - https://doh.pub/dns-query
#    - https://120.53.53.53/dns-query
#  fallback-filter:                                 # 当`fallback-filter.geoip`为true，并且IP地址的GEOIP为`CN`时，使用`nameserver`中的服务器解析的IP地址。
#    geoip: true
#    geoip-code: CN
#    ipcidr:
#      - 240.0.0.0/4

#========= 建立锚点 =========#
# 策略组引用
pr:   &a3 {type: select,   proxies: [自动选择, 手动切换, 香港节点, 日本节点, 美国节点, 台湾节点, 狮城节点, DIRECT] }
p:    &a1 {type: http,     interval: 86400,  health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800} }
auto: &a4 {type: url-test, lazy: true,  url: http://www.gstatic.com/generate_204, interval: 900, use: [改这里1, 改这里2, 改这里3] }
use:  &a2 {type: select,   use: [改这里1, 改这里2, 改这里3, wyy] }
c:    &a6 {type: http,     behavior: classical, interval: 86400}
d:    &a5 {type: http,     behavior: domain,    interval: 86400}
i:    &a7 {type: http,     behavior: ipcidr,    interval: 86400}

proxy-providers:
  改这里1:
    <<: *a1
    url: 订阅链接1
    # URL后面填写格式1[单一订阅]: 直接填写你的机场Clash订阅[推荐此种方式，避免订阅泄露]
    # URL后面填写格式2[多个订阅]：https://api.nexconvert.com/sub?target=clash&url=请手动填入你的订阅(多机场订阅用|分割即可)&emoji=true&list=true&new_name=true&udp=false
    path: ./proxy_providers/改这里1.yaml
    
  改这里2:
    <<: *a1
    url: 订阅链接2
    path: ./proxy_providers/改这里2.yaml
    
  改这里3:
    <<: *a1
    url: 订阅链接3
    path: ./proxy_providers/改这里3.yaml
    
  wyy:
    <<: *a1
    url: https://raw.githubusercontent.com/oiozi/Gears/main/Package/Unblock/Node.txt
    path: ./proxy_providers/wyy.yaml
    
proxies: null

proxy-groups:
#分流分组
  - {name: 自动选择, <<: *a4}
  - {name: 手动切换, <<: *a2}
  - {name: 人工智能, <<: *a3}
  - {name: 谷歌服务, <<: *a3}
  - {name: 电报消息, <<: *a3}
  - {name: 国际媒体, <<: *a3}
  - {name: 国外音乐, <<: *a3}
  - {name: 推特服务, <<: *a3}
  - {name: 种子网站, <<: *a3}
  - {name: 苹果服务, <<: *a3}
  - {name: 全球加速, <<: *a3}
  - {name: 黑白名单, <<: *a3}
#节点分组
  - {name: 广告屏蔽, type: select, proxies: [REJECT]}
  - {name: 网易音乐, <<: *a2, filter: "网易|音|(?i)乐"               	}       # a4更改为a2，即为手动选择
  - {name: 香港节点, <<: *a4, filter: "港|HK|(?i)Hong"               	}       # a4更改为a2，即为手动选择
  - {name: 日本节点, <<: *a4, filter: "日|东京|JP|(?i)Japan"         	}       # a4更改为a2，即为手动选择
  - {name: 台湾节点, <<: *a4, filter: "台|湾|TW|(?i)Taiwan"          	}       # a4更改为a2，即为手动选择
  - {name: 美国节点, <<: *a4, filter: "美|US|(?i)States|American"    	}       # a4更改为a2，即为手动选择
  - {name: 狮城节点, <<: *a4, filter: "新|坡|SG|(?i)Singapore"       	}       # a4更改为a2，即为手动选择
  
#分流指引
rule-providers:
  NetEaseMusic:		{<<: *a6, url: https://raw.githubusercontent.com/oiozi/Gears/main/Rule/Clash/NeteaseMusic.yaml,										path: ./ruleset/NetEaseMusic.yaml			}
  Direct:			{<<: *a5, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Direct/Direct.yaml,						path: ./ruleset/Direct.yaml					}
  Lan:				{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Lan/Lan.yaml,								path: ./ruleset/Lan.yaml					}
  Download:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Download/Download.yaml,					path: ./ruleset/Download.yaml				}
  Advertising:		{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Advertising/Advertising_Classical.yaml,	path: ./ruleset/Advertising_Classical.yaml	}
  OpenAi:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/OpenAI/OpenAI.yaml,						path: ./ruleset/OpenAi.yaml					}
  Google:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml,						path: ./ruleset/Google.yaml					}
  Telegram:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram.yaml,					path: ./ruleset/Telegram.yaml				}
  Spotify:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Spotify/Spotify.yaml,						path: ./ruleset/Spotify.yaml				}
  GlobalMedia:		{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml,	path: ./ruleset/GlobalMedia.yaml			}
  Apple:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple_Classical.yaml,				path: ./ruleset/Apple.yaml					}
  Github:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml,						path: ./ruleset/Github.yaml					}
  Microsoft:		{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml,					path: ./ruleset/Microsoft.yaml				}
  Twitter:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitter/Twitter.yaml,						path: ./ruleset/Twitter.yaml				}
  PrivateTracker:	{<<: *a6, url: https://cdn.jsdelivr.net/gh/oiozi/Gears@main/Rule/Clash/PrivateTracker.yaml,											path: ./ruleset/PrivateTracker.yaml			}
  ChinaMax:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml,			path: ./ruleset/ChinaMax_Classical.yaml		}
  Global:			{<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Global/Global_Classical.yaml,				path: ./ruleset/Global_Classical.yaml		}
  
#分流规则
rules:
  - RULE-SET,Direct,DIRECT
  - RULE-SET,Lan,DIRECT
  - RULE-SET,Download,DIRECT
  - RULE-SET,Advertising,广告屏蔽
  - RULE-SET,OpenAi,人工智能
  - RULE-SET,Google,谷歌服务
  - RULE-SET,Telegram,电报消息
  - RULE-SET,GlobalMedia,国际媒体
  - RULE-SET,Spotify,国外音乐
  - RULE-SET,NetEaseMusic,网易音乐
  - RULE-SET,PrivateTracker,种子网站
  - RULE-SET,Apple,苹果服务
  - RULE-SET,Twitter,全球加速
  - RULE-SET,Github,全球加速
  - RULE-SET,Microsoft, 全球加速
  - RULE-SET,ChinaMax,DIRECT
  - RULE-SET,Global,全球加速
  - GEOIP,CN,DIRECT
  - MATCH,黑白名单
