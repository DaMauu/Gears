# ------------------------------------------------
# |          Clash Config Make by oiozi           |
# |     TG Channel: https://t.me/REBIRTHOKAY     |
# |       GitHub: https://github.com/oiozi        |
# |          Update Date: 2023.09.01             |
# |                  enjoy                       |
# ------------------------------------------------
#port: 7890             # HTTP 代理端口
#socks-port: 7891       # Socks 端口
#redir-port: 7892       # Redir 端口
mixed-port: 7890        # 混合端口
allow-lan: true         # 允许局域网连接
bind-address: "*"       # 地址绑定
mode: rule              # 规则模式
log-level: info         # 日志级别
ipv6: true              # IPV6开关
external-controller: 127.0.0.1:9090
secret: 你的密钥

dns:
  enable: true          # 不使用系统 DNS
  listen: 0.0.0.0:53    # dns 监听
  ipv6: true            # 关闭 IPV6
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - "*.lan"
    - localhost.ptlogin2.qq.com
    - +.srv.nintendo.net
    - +.stun.playstation.net
    - +.msftconnecttest.com
    - +.msftncsi.com
    - +.xboxlive.com
    - msftconnecttest.com
    - xbox.*.microsoft.com
    - "*.battlenet.com.cn"
    - "*.battlenet.com"
    - "*.blzstatic.cn"
    - "*.battle.net"
  nameserver:        # 默认 DNS 服务
    - 119.29.29.29 
    - 223.5.5.5
  fallback:          # 国外 DNS 服务器
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - https://dns.alidns.com/dns-query
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
#========= 建立锚点 =========#

# 策略组引用
pr:   &a3 {type: select,   proxies: [自动选择, 手动切换, 香港节点, 日本节点, 美国节点, 台湾节点, 狮城节点, DIRECT] }
p:    &a1 {type: http,     interval: 86400,  health-check: {enable: true, url: http://www.gstatic.com/generate_204, interval: 1800} }
auto: &a4 {type: url-test, lazy: true,  url: http://www.gstatic.com/generate_204, interval: 900, use: [改这里1, 改这里2, 改这里3] }
use:  &a2 {type: select,   use: [改这里1, 改这里2, 改这里3, wyy] }
c:    &a6 {type: http,     behavior: classical, interval: 86400}
d:    &a5 {type: http,     behavior: domain,    interval: 86400}
i:    &a7 {type: http,     behavior: ipcidr,    interval: 86400}

proxy-providers:
  改这里1:
    <<: *a1
    url: 订阅链接1
    # URL后面填写格式1[单一订阅]: 直接填写你的机场Clash订阅[推荐此种方式，避免订阅泄露]
    # URL后面填写格式2[多个订阅]：https://api.nexconvert.com/sub?target=clash&url=请手动填入你的订阅(多机场订阅用|分割即可)&emoji=true&list=true&new_name=true&udp=false
    path: ./proxy_providers/改这里1.yaml
    
  改这里2:
    <<: *a1
    url: 订阅链接2
    path: ./proxy_providers/改这里2.yaml
    
  改这里3:
    <<: *a1
    url: 订阅链接3
    path: ./proxy_providers/改这里3.yaml
    
  wyy:
    <<: *a1
    url: https://raw.githubusercontent.com/oiozi/Gears/main/Package/Unblock/Node.txt
    path: ./proxy_providers/wyy.yaml
    
proxies: null

proxy-groups:
#分流分组
  - {name: 自动选择, <<: *a4}
  - {name: 手动切换, <<: *a2}
  - {name: 人工智能, <<: *a3}
  - {name: 谷歌服务, <<: *a3}
  - {name: 国际媒体, <<: *a3}
  - {name: 国外音乐, <<: *a3}
  - {name: 电报消息, <<: *a3}
  - {name: 推特服务, <<: *a3}
  - {name: 种子网站, <<: *a3}
  - {name: 苹果服务, <<: *a3}
  - {name: 全球加速, <<: *a3}
  - {name: 黑白名单, <<: *a3}
  
#节点分组
  - {name: 广告屏蔽, type: select, proxies: [REJECT]}
  - {name: 网易音乐, <<: *a2, filter: "网易|音|(?i)乐"               	}       # a4更改为a2，即为手动选择
  - {name: 香港节点, <<: *a4, filter: "港|HK|(?i)Hong"               	}       # a4更改为a2，即为手动选择
  - {name: 日本节点, <<: *a4, filter: "日|东京|JP|(?i)Japan"         	}       # a4更改为a2，即为手动选择     
  - {name: 台湾节点, <<: *a4, filter: "台|湾|TW|(?i)Taiwan"          	}       # a4更改为a2，即为手动选择
  - {name: 美国节点, <<: *a4, filter: "美|US|(?i)States|American"    	}       # a4更改为a2，即为手动选择
  - {name: 狮城节点, <<: *a4, filter: "新|坡|SG|(?i)Singapore"       	}       # a4更改为a2，即为手动选择
  
# 分流规则
rule-providers:
  NetEaseMusic:    {<<: *a6, url: https://raw.githubusercontent.com/oiozi/Gears/main/Rule/Clash/NeteaseMusic.yaml,                                      path: ./ruleset/NetEaseMusic.yaml     }
  Direct:          {<<: *a5, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Direct/Direct.yaml,                       path: ./ruleset/Direct.yaml           }
  Lan:             {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Lan/Lan.yaml,                             path: ./ruleset/Lan.yaml              }
  Download:        {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Download/Download.yaml,                   path: ./ruleset/Download.yaml         }
  Ad:              {<<: *a5, url: https://anti-ad.net/clash.yaml,                                                                                       path: ./ruleset/anti-ad-clash.yaml    }
  OpenAi:          {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/OpenAI/OpenAI.yaml,                       path: ./ruleset/OpenAi.yaml           }
  Google:          {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Google/Google.yaml,                       path: ./ruleset/Google.yaml           }
  Spotify:         {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Spotify/Spotify.yaml,                     path: ./ruleset/Spotify.yaml          } 
  GlobalMedia:     {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/GlobalMedia/GlobalMedia_Classical.yaml,   path: ./ruleset/GlobalMedia.yaml      }
  Apple:           {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Apple/Apple_Classical.yaml,               path: ./ruleset/Apple.yaml            }
  Github:          {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/GitHub/GitHub.yaml,                       path: ./ruleset/Github.yaml           }
  Microsoft:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Microsoft/Microsoft.yaml,                 path: ./ruleset/Microsoft.yaml        }
  Telegram:        {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Telegram/Telegram.yaml,                   path: ./ruleset/Telegram.yaml         }
  Twitter:         {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/Twitter/Twitter.yaml,                     path: ./ruleset/Twitter.yaml          }
  PrivateTracker:  {<<: *a6, url: https://cdn.jsdelivr.net/gh/oiozi/Gears@main/Rule/Clash/PrivateTracker.yaml,                                          path: ./ruleset/PrivateTracker.yaml   }
  ChinaIP:         {<<: *a7, url: https://cdn.jsdelivr.net/gh/soffchen/GeoIP2-CN@release/clash-rule-provider.yml,                                       path: ./ruleset/ChinaIP.yaml          }
  ProxyLite:       {<<: *a6, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@release/rule/Clash/ProxyLite/ProxyLite.yaml,                 path: ./ruleset/ProxyLite.yaml        }
  
 # 分流Policy 
rules:
  - RULE-SET,Direct,DIRECT
  - RULE-SET,Lan,DIRECT
  - RULE-SET,Download,DIRECT
  - RULE-SET,Ad,广告屏蔽
  - RULE-SET,OpenAi,人工智能
  - RULE-SET,Google,谷歌服务
  - RULE-SET,GlobalMedia,国际媒体
  - RULE-SET,Spotify,国外音乐
  - RULE-SET,NeteaseMusic,网易音乐
  - RULE-SET,Telegram,电报消息
  - RULE-SET,PrivateTracker,种子网站
  - RULE-SET,Apple,苹果服务
  - RULE-SET,Twitter,全球加速
  - RULE-SET,Github,全球加速
  - RULE-SET,Microsoft, 全球加速
  - RULE-SET,ProxyLite,全球加速
  - RULE-SET,ChinaIP,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,黑白名单


# TUN模式是通过在操作系统上安装一个虚拟网卡来实现的，它可以接管所有的网络流量，并将流量转发至Clash，然后由Clash发出请求
# Windows 系统中如何启用TUN模式
# 1、运行 Clash For Windows, 确保使用规则模式，并可以联网
# 2、点击 General中的Service Mode右侧的Manage按钮，在弹出窗口中选择schtasks，安装服务模式。安装完成后，应用程序会自动重启，Service Mode右侧的地球图标变为绿色表示安装成功
# 3、点击 General中的TUN Mode右侧的开关以启动TUN模式
